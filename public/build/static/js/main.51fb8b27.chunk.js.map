{
  "version": 3,
  "sources": [
    "api/apiHandler.js",
    "components/Auth/UserContext.jsx",
    "components/Auth/UserProvider.jsx",
    "components/Auth/withUser.jsx",
    "components/NavMain.jsx",
    "pages/Home.jsx",
    "components/Forms/FormSignin.jsx",
    "pages/Signin.jsx",
    "components/Forms/FormSignup.jsx",
    "pages/Signup.jsx",
    "components/ProtectedRoute.jsx",
    "pages/Profile.jsx",
    "components/OneCardItemList.jsx",
    "components/Forms/FormField.jsx",
    "components/SearchBar/SearchBar.jsx",
    "components/Loading.jsx",
    "pages/AllCards.jsx",
    "components/OneCard/ActionButtons.jsx",
    "components/Auctions/AuctionsListings/OneOffer.jsx",
    "components/Auctions/AuctionsListings/OffersTable.jsx",
    "components/OneCard/CardInfo.jsx",
    "components/OneCard/OneCardContainer.jsx",
    "components/Exchange/TableListings/SelectCardsBox.jsx",
    "components/Exchange/TableListings/OneListing.jsx",
    "components/Exchange/TableListings/TableListings.jsx",
    "components/OneCard/OneCard.jsx",
    "components/Auctions/UserAuctions/AuctionItem.jsx",
    "components/Message.jsx",
    "components/Explanation.jsx",
    "pages/Auctions.jsx",
    "components/Forms/FormSale.jsx",
    "components/UserCards/BtnExchangeStatus.jsx",
    "components/UserCards/UserCardsList.jsx",
    "components/Auctions/UserAuctions/UserAuctionItem.jsx",
    "components/Auctions/UserAuctions/UserAuctions.jsx",
    "components/Exchange/CardsOpenForExchange.jsx",
    "components/Exchange/ExchangeOfferBox.jsx",
    "components/Exchange/UserCardExchangeItem.jsx",
    "components/Exchange/UserExchangesList.jsx",
    "App.jsx",
    "index.js"
  ],
  "names": [
    "service",
    "axios",
    "create",
    "baseURL",
    "process",
    "withCredentials",
    "errorHandler",
    "error",
    "response",
    "data",
    "console",
    "log",
    "apiHandler",
    "signup",
    "userInfo",
    "post",
    "then",
    "res",
    "catch",
    "signin",
    "logout",
    "get",
    "isLoggedIn",
    "getOneCard",
    "id",
    "getItems",
    "getOneCardFromApi",
    "getApiByPage",
    "page",
    "filterApiByName",
    "name",
    "getAllUserCards",
    "addCard",
    "card",
    "updateCard",
    "updatedCard",
    "patch",
    "getUserCollection",
    "type",
    "getOneUserCard",
    "createBid",
    "bid",
    "deleteBid",
    "delete",
    "findCardsOnSale",
    "findUserAuctions",
    "findAuction",
    "updateAuction",
    "newBid",
    "getAllUserCardsFromApiCard",
    "apiId",
    "getAuctionsForTCGCard",
    "tcgId",
    "getAllOpenEchanges",
    "getAllOpenEchangesForTCGCard",
    "createExchange",
    "exchange",
    "getExchangeOffers",
    "deleteExchange",
    "getExchangeBySellerItem",
    "idItem",
    "UserContext",
    "React",
    "createContext",
    "UserProvider",
    "state",
    "user",
    "isLoading",
    "setUser",
    "setState",
    "removeUser",
    "authValues",
    "this",
    "Provider",
    "value",
    "props",
    "children",
    "Component",
    "withUser",
    "ComponentToPassUserContextTo",
    "Consumer",
    "context",
    "className",
    "exact",
    "to",
    "src",
    "alt",
    "Fragment",
    "email",
    "onClick",
    "FormSignin",
    "password",
    "handleChange",
    "event",
    "key",
    "target",
    "handleSubmit",
    "preventDefault",
    "onChange",
    "onSubmit",
    "htmlFor",
    "withRouter",
    "Signin",
    "FormSignup",
    "username",
    "history",
    "push",
    "Signup",
    "component",
    "rest",
    "render",
    "Profile",
    "OneCardItemList",
    "images",
    "small",
    "height",
    "width",
    "FormField",
    "label",
    "SearchBar",
    "e",
    "handleClick",
    "handleReset",
    "bind",
    "Loading",
    "AllCards",
    "cards",
    "loading",
    "loadingItems",
    "prevY",
    "getPokemonsByName",
    "input",
    "getAllPokemons",
    "a",
    "pokemonTCGId",
    "err",
    "observer",
    "IntersectionObserver",
    "handleObserver",
    "root",
    "rootMargin",
    "threshold",
    "observe",
    "loadingRef",
    "entities",
    "y",
    "boundingClientRect",
    "curPage",
    "loadingTextCSS",
    "display",
    "style",
    "minHeight",
    "map",
    "ref",
    "margin",
    "length",
    "handleAdd",
    "getUserCardsFromModel",
    "userCards",
    "_id",
    "getCurrentAuction",
    "auction",
    "updateAuction",
    "currentBid",
    "previousBid",
    "updatedBid",
    "displayCurrentBid",
    "finalFunction",
    "handleBid",
    "offer",
    "buyer",
    "hasHighestBid",
    "timer",
    "setTimeout",
    "clearTimeout",
    "owner",
    "cardState",
    "initialPrice",
    "OffersTable",
    "auctions",
    "CardInfo",
    "pokemon",
    "subtypes",
    "supertype",
    "hp",
    "attacks",
    "damage",
    "text",
    "weaknesses",
    "resistances",
    "set",
    "number",
    "total",
    "rarity",
    "symbol",
    "artist",
    "OneCardContainer",
    "large",
    "SelectCardsBox",
    "Dropdown",
    "Toggle",
    "variant",
    "Menu",
    "i",
    "Item",
    "href",
    "OneListing",
    "callBox",
    "exchangeItems",
    "exchangeExists",
    "array",
    "deleteCard",
    "newArr",
    "filter",
    "checked",
    "exchangeOffer",
    "seller",
    "listing",
    "sellerItem",
    "buyerItem",
    "getTheExchange",
    "cardPromises",
    "Promise",
    "all",
    "responses",
    "populatedCards",
    "getUserCards",
    "item",
    "TableListings",
    "offers",
    "formDisplayed",
    "cardsOnSale",
    "cardsOpenForExchange",
    "message",
    "getInfoCardFromApi",
    "getOngoingAuctions",
    "getCardsOpenForExchange",
    "match",
    "params",
    "ActionButtons",
    "putCardOnSale",
    "showForm",
    "displaySaleForm",
    "AuctionItem",
    "link",
    "cardmarket",
    "prices",
    "averageSellPrice",
    "Message",
    "Explanation",
    "Auctions",
    "SellCardForm",
    "endDate",
    "closeForm",
    "startDate",
    "Date",
    "now",
    "status",
    "bidCreated",
    "onSale",
    "price",
    "cardInfo",
    "disabled",
    "BtnExchangeStatus",
    "openForExchange",
    "update",
    "CardsList",
    "searchName",
    "callForm",
    "getAllCards",
    "updateStatus",
    "FormSale",
    "UserAuctionItem",
    "handleAccept",
    "handleDelete",
    "UserAuctions",
    "myAuctions",
    "promises",
    "populatedBids",
    "OpenForExchange",
    "ExchangeOfferBox",
    "items",
    "populatedItems",
    "UserCardExchangeItem",
    "handleDecline",
    "UserExchanges",
    "exchanges",
    "getAllExchangeOffers",
    "myExchanges",
    "updatedSellerItem",
    "newCard",
    "updatedBuyerItem",
    "App",
    "path",
    "Home",
    "OneCard",
    "OpenForExchanges",
    "ReactDOM",
    "document",
    "getElementById"
  ],
  "mappings": "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",
  "file": "static/js/main.51fb8b27.chunk.js",
  "sourcesContent": [
    "import axios from \"axios\";\r\n\r\nconst service = axios.create({\r\n  baseURL: process.env.REACT_APP_BACKEND_URL,\r\n  withCredentials: true, // Cookie is sent to client when using this service. (used for session)\r\n});\r\n\r\nfunction errorHandler(error) {\r\n  if (error.response.data) {\r\n    console.log(error.response && error.response.data);\r\n    throw error;\r\n  }\r\n  throw error;\r\n}\r\n\r\nconst apiHandler = {\r\n  service,\r\n\r\n  signup(userInfo) {\r\n    return service\r\n      .post(\"/api/auth/signup\", userInfo)\r\n      .then((res) => res.data)\r\n      .catch(errorHandler);\r\n  },\r\n\r\n  signin(userInfo) {\r\n    return service\r\n      .post(\"/api/auth/signin\", userInfo)\r\n      .then((res) => res.data)\r\n      .catch(errorHandler);\r\n  },\r\n\r\n  logout() {\r\n    return service\r\n      .get(\"/api/auth/logout\")\r\n      .then((res) => res.data)\r\n      .catch(errorHandler);\r\n  },\r\n\r\n  isLoggedIn() {\r\n    return service\r\n      .get(\"/api/users/profile\")\r\n      .then((res) => res.data)\r\n      .catch(errorHandler);\r\n  },\r\n  \r\n  getOneUserCard(id) {\r\n    return service \r\n      .get(\"/api/me/cards/\" + id)\r\n      .then((res) => res.data)\r\n      .catch(errorHandler)\r\n  },\r\n\r\n  // getItems() {\r\n  //   return axios\r\n  //     .get(\"https://api.pokemontcg.io/v2/cards?api_key=528e1aa6-a294-4981-ada2-1a04038be6ac\")\r\n  //     .then((res) => res.data.data)\r\n  //     .catch(errorHandler);\r\n  // },\r\n\r\n  getItems() {\r\n    return service\r\n    .get(\"/api/pokemonApi/all\")\r\n    .then((res) => res.data)\r\n    .catch(errorHandler)\r\n  },\r\n\r\n  //old getItems => getAllCards => will get all the cards from the API\r\n  // getAllCards() {\r\n  //   return axios\r\n  //     .get(\"https://api.pokemontcg.io/v2/cards?api_key=528e1aa6-a294-4981-ada2-1a04038be6ac\")\r\n  //     .then((res) => res.data.data)\r\n  //     .catch(errorHandler);\r\n  // },\r\n\r\n\r\n  getOneCardFromApi(id) {\r\n    return service\r\n    .get(`/api/pokemonApi/${id}`)\r\n    .then(res => res.data)\r\n    .catch(errorHandler)\r\n  },\r\n\r\n  getApiByPage(page) {\r\n    return service \r\n    .get(`/api/pokemonApi/all/${page}`)\r\n    .then(res => res.data)\r\n    .catch(errorHandler)\r\n  },\r\n\r\n  filterApiByName(name, page) {\r\n    return service\r\n    .get(`/api/pokemonApi/search/${name}/${page}`)\r\n    .then(res => res.data)\r\n    .catch(errorHandler)\r\n  },\r\n\r\n  //old getAllCards => getAllUserCards removed /api \r\n  getAllUserCards() {\r\n    return service \r\n    .get(\"/api/me/cards\")\r\n    .then(res => res.data)\r\n    .catch(errorHandler)\r\n  },\r\n\r\n  addCard(card) {\r\n    return service\r\n    .post(\"/api/me/cards/add\", card)\r\n    .then(res => res.data)\r\n    .catch(errorHandler)\r\n  },\r\n\r\n  updateCard(id, updatedCard) {\r\n    return service\r\n    .patch(`/api/me/cards/${id}/edit`, updatedCard)\r\n    .then(res => res.data)\r\n    .catch(errorHandler)\r\n  },\r\n  //User Interaction\r\n  //old findUserCollection => getUserCollection removed /api\r\n  getUserCollection(type) {\r\n    return service \r\n    .get(`/api/me/collection/${type}`)\r\n    .then(res => res.data)\r\n    .catch(errorHandler)\r\n  },\r\n\r\n  getOneUserCard(id){\r\n    return service\r\n    .get(\"/api/me/cards/\" + id)\r\n    .then(res => res.data)\r\n    .catch(errorHandler)\r\n  },\r\n\r\n  // Bids \r\n  //create a new bid\r\n  createAuction(bid){\r\n    return service\r\n    .post('/api/bids/create', bid)\r\n    .then(res => res.data)\r\n    .catch(errorHandler)\r\n  },\r\n\r\n  deleteAuction(bid){\r\n    return service\r\n      .delete(`/api/bids/${bid}`)\r\n      .then(res => res.data)\r\n      .catch(errorHandler)\r\n  },\r\n\r\n  //?? delete this i think\r\n  findOpenAuctions(){\r\n    return service\r\n    .get(`/api/bids`)\r\n    .then(res => res.data)\r\n    .catch(errorHandler)\r\n  },\r\n\r\n  findUserAuctions(){\r\n    return service\r\n      .get(\"/api/profile/auctions\")\r\n      .then(res => res.data)\r\n      .catch(errorHandler)\r\n  },\r\n  \r\n  findAuction(id){\r\n    return service\r\n    .get(`/api/bids/${id}`)\r\n    .then(res => res.data)\r\n    .catch(errorHandler)\r\n},\r\n\r\n  updateAuction(id, newBid){\r\n      return service\r\n      .patch(`/api/bids/${id}`, newBid)\r\n      .then(res => res.data)\r\n      .catch(errorHandler)\r\n  },\r\n\r\n  getAllUserCardsFromApiCard(apiId) {\r\n    return service\r\n    .get(\"/api/me/cards/all/\" + apiId)\r\n    .then(res => res.data)\r\n    .catch(errorHandler)\r\n  },\r\n\r\n  //Get all the cards that are on sale\r\n  getAuctionsForTCGCard(tcgId){\r\n    return service\r\n    .get(\"/api/cards/bids/\" + tcgId)\r\n    .then(res => res.data)\r\n    .catch(errorHandler)\r\n  },\r\n\r\n  getAllOpenEchanges() {\r\n    return service \r\n    .get(\"/api/exchanges\")\r\n    .then(res => res.data)\r\n    .catch(errorHandler)\r\n  },\r\n\r\n  getAllOpenEchangesForTCGCard(tcgId) {\r\n    return service \r\n    .get(\"/api/exchanges/\" + tcgId)\r\n    .then(res => res.data)\r\n    .catch(errorHandler)\r\n  },\r\n  \r\n  createExchange(exchange) {\r\n    return service \r\n    .post(\"/api//profile/exchanges/create\", exchange)\r\n    .then(res => res.data)\r\n    .catch(errorHandler)\r\n  },\r\n\r\n  getExchangeOffersReceived() {\r\n    return service \r\n    .get(\"/api/profile/exchanges\")\r\n    .then(res => res.data)\r\n    .catch(errorHandler)\r\n  },\r\n\r\n  deleteExchange(id) {\r\n    return service\r\n    .delete(`/api/profile/exchanges/${id}`)\r\n    .then(res => res.data)\r\n    .catch(errorHandler)\r\n  },\r\n\r\n  // Find the exchange offer initiated by the user\r\n  // over one particular item\r\n  getExchangeBySellerItem (idItem) {\r\n    return service\r\n    .get(`/api/profile/exchanges/${idItem}`)\r\n    .then(res => res.data)\r\n    .catch(errorHandler)\r\n  }\r\n  \r\n}\r\n\r\nexport default apiHandler;\r\n",
    "import React from \"react\";\r\n\r\nexport const UserContext = React.createContext();\r\n",
    "import React, { Component } from \"react\";\r\nimport apiHandler from \"../../api/apiHandler\";\r\nimport { UserContext } from \"./UserContext\";\r\n\r\nclass UserProvider extends Component {\r\n  state = {\r\n    user: null,\r\n    isLoggedIn: false,\r\n    isLoading: true,\r\n  };\r\n\r\n  componentDidMount() {\r\n    apiHandler\r\n      .isLoggedIn()\r\n      .then((data) => {\r\n        this.setState({ user: data, isLoggedIn: true, isLoading: false });\r\n      })\r\n      .catch((error) => {\r\n        this.setState({ user: null, isLoggedIn: false, isLoading: false });\r\n      });\r\n  }\r\n\r\n  setUser = (user) => {\r\n    this.setState({ user, isLoggedIn: true });\r\n  };\r\n\r\n  removeUser = () => {\r\n    this.setState({ user: null, isLoggedIn: false });\r\n  };\r\n\r\n  render() {\r\n    //  Setup all the values/functions you want to expose to anybody reading\r\n    // from the AuthContext.\r\n    const authValues = {\r\n      user: this.state.user,\r\n      setUser: this.setUser,\r\n      removeUser: this.removeUser,\r\n      isLoggedIn: this.state.isLoggedIn,\r\n      isLoading: this.state.isLoading,\r\n    };\r\n\r\n    return (\r\n      <UserContext.Provider value={authValues}>\r\n        {this.props.children}\r\n      </UserContext.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserProvider;\r\n",
    "import React from \"react\";\r\nimport { UserContext } from \"./UserContext\";\r\n\r\n// This is what we call a HOC (Higher Order Component).\r\n// It takes a component as a parameter and it returns a component.\r\n// This technique can be used to abstract some logic in order to pass\r\n// some data down as props to the component sent as parameter.\r\n\r\n// The use case of this one is to make it easy to access the user context to\r\n// any component in our app.\r\n\r\n/* ******************************************************** */\r\n\r\n//  How to use:  =>\r\n// YourComponent.jsx\r\n// import React from \"react\"\r\n// function or class YourComponent()\r\n//\r\n// ... your implementation.\r\n//\r\n// export default withUser(YourComponent)\r\n// ----------------^ your component now has access to the user context defined in UserProvider.jsx.\r\n\r\n// This component is not exported as default, so you have to import it\r\n// this way :\r\n  // import { withUser } from \"../relative/path/to/this/file\"\r\n\r\nexport const withUser = (ComponentToPassUserContextTo) => {\r\n  return function (props) {\r\n    return (\r\n      <UserContext.Consumer>\r\n        {(context) => (\r\n          <ComponentToPassUserContextTo {...props} context={context} />\r\n        )}\r\n      </UserContext.Consumer>\r\n    );\r\n  };\r\n};\r\n",
    "import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { withUser } from \"../components/Auth/withUser\";\r\nimport apiHandler from \"../api/apiHandler\";\r\n\r\nimport \"../styles/NavMain.css\";\r\n\r\nconst NavMain = (props) => {\r\n  const { context } = props;\r\n\r\n  function handleLogout() {\r\n    apiHandler\r\n      .logout()\r\n      .then(() => {\r\n        context.removeUser();\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  return (\r\n    <nav className=\"NavMain navbar\">\r\n      <div className=\"home-div\"> \r\n      \r\n      <NavLink exact to=\"/\">\r\n      <img className=\"pokeball-logo\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/5/53/Pok%C3%A9_Ball_icon.svg/1200px-Pok%C3%A9_Ball_icon.svg.png\" alt=\"\" />\r\n\r\n      </NavLink>\r\n      </div>\r\n      \r\n      <ul className=\"nav-list\">\r\n        {context.isLoggedIn && (\r\n          <React.Fragment>\r\n            <li>\r\n              <NavLink to=\"/cards\" className=\"NavLink\">All Cards</NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink to=\"/profile/cards\" className=\"NavLink\">My Cards</NavLink>\r\n            </li>\r\n            <li>\r\n            <div className=\"dropdown\">\r\n              <button className=\"dropbtn NavLink\"  >Shop\r\n                <i className=\"fa fa-caret-down\"></i>\r\n              </button>\r\n              <div className=\"dropdown-content\">\r\n                <NavLink to=\"/auctions\" className=\"NavLink\">All Auctions</NavLink>\r\n                <NavLink to=\"/exchanges\" className=\"NavLink\">All Exchanges</NavLink>\r\n                <NavLink to=\"/profile/auctions\" className=\"NavLink\">My Auctions</NavLink>\r\n                <NavLink to=\"/profile/exchanges\" className=\"NavLink\">My Exchanges</NavLink>\r\n              </div>\r\n            </div>\r\n              \r\n            </li>\r\n            <li>\r\n              <NavLink to=\"/profile\" className=\"NavLink\">\r\n                {context.user && context.user.email}\r\n              </NavLink>\r\n            </li>\r\n            <li>\r\n              <p onClick={handleLogout} className=\"NavLink\">Logout</p>\r\n            </li>\r\n          </React.Fragment>\r\n        )}\r\n        {!context.isLoggedIn && (\r\n          <React.Fragment>\r\n            <li>\r\n              <NavLink to=\"/signin\" className=\"NavLink\">Log in</NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink to=\"/signup\" className=\"NavLink\">Create account</NavLink>\r\n            </li>\r\n          </React.Fragment>\r\n        )}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default withUser(NavMain);\r\n",
    "import React from \"react\";\r\nimport { Link } from \"react-router-dom\"\r\nimport {withUser} from \"../components/Auth/withUser\"\r\nimport \"./Home.css\"\r\nclass Home extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"main-div\">\r\n          \r\n          <img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/1/1a/Pok%C3%A9mon_Trading_Card_Game_logo.svg/1280px-Pok%C3%A9mon_Trading_Card_Game_logo.svg.png\" alt=\"\" />          \r\n          <div className=\"template-button\">\r\n            <Link to=\"/cards\">See all cards</Link>\r\n          </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withUser(Home);\r\n",
    "import React, { Component } from \"react\";\r\nimport { withRouter, Redirect } from \"react-router-dom\";\r\nimport apiHandler from \"../../api/apiHandler\";\r\nimport { withUser } from \"../Auth/withUser\";\r\n\r\nclass FormSignin extends Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\",\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    const key = event.target.name;\r\n    const value = event.target.value;\r\n\r\n    this.setState({ [key]: value });\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    apiHandler\r\n      .signin(this.state)\r\n      .then((data) => {\r\n        this.props.context.setUser(data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        // Display error message here, if you set the state\r\n      });\r\n  };\r\n\r\n  render() {\r\n    if (this.props.context.user) {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n\r\n    return (\r\n      <div className=\"signin-div\">\r\n          <form onChange={this.handleChange} onSubmit={this.handleSubmit}>\r\n          <h2>Signin</h2>\r\n          <label htmlFor=\"email\">Email</label>\r\n          <input type=\"email\" id=\"email\" name=\"email\" />\r\n          <label htmlFor=\"password\">Password</label>\r\n          <input type=\"password\" id=\"password\" name=\"password\" />\r\n          <button className=\"template-button-all-cards\">Submit</button>\r\n      </form>\r\n      </div>\r\n      \r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(withUser(FormSignin));\r\n",
    "import React from \"react\";\r\nimport FormSignin from \"../components/Forms/FormSignin\";\r\nimport './Signin.css'\r\n\r\nconst Signin = (props) => {\r\n  return <FormSignin />;\r\n};\r\n\r\nexport default Signin;\r\n",
    "import React, { Component } from \"react\";\r\nimport { withRouter, Redirect } from \"react-router-dom\";\r\nimport { withUser } from \"../Auth/withUser\";\r\nimport apiHandler from \"../../api/apiHandler\";\r\n\r\nclass FormSignup extends Component {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\",\r\n    username: \"\",\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    const value = event.target.value;\r\n    const key = event.target.name;\r\n\r\n    this.setState({ [key]: value });\r\n  };\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    apiHandler\r\n      .signup(this.state)\r\n      .then(() => {\r\n        this.props.history.push(\"/signin\");\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    if (this.props.context.user) {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <h2>Signup</h2>\r\n        <label htmlFor=\"username\">Username</label>\r\n        <input\r\n          onChange={this.handleChange}\r\n          value={this.state.username}\r\n          type=\"username\"\r\n          id=\"username\"\r\n          name=\"username\"\r\n        />\r\n        <label htmlFor=\"email\">Email</label>\r\n        <input\r\n          onChange={this.handleChange}\r\n          value={this.state.email}\r\n          type=\"email\"\r\n          id=\"email\"\r\n          name=\"email\"\r\n        />\r\n        <label htmlFor=\"password\">Password</label>\r\n        <input\r\n          onChange={this.handleChange}\r\n          value={this.state.password}\r\n          type=\"password\"\r\n          id=\"password\"\r\n          name=\"password\"\r\n        />\r\n        <button className=\"template-button-all-cards\">Submit</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(withUser(FormSignup));\r\n",
    "import React from \"react\";\r\nimport FormSignup from \"../components/Forms/FormSignup\";\r\n\r\nconst Signup = (props) => {\r\n  return <FormSignup />;\r\n};\r\n\r\nexport default Signup;\r\n",
    "import React from \"react\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\nimport { withUser } from \"./Auth/withUser\";\r\n\r\nconst ProtectedRoute = ({ component: Component, context, ...rest }) => {\r\n  if (context.isLoading) {\r\n    return null;\r\n  } else if (context.isLoggedIn) {\r\n    return <Route {...rest} render={(props) => <Component {...props} />} />;\r\n  } else {\r\n    return <Redirect to=\"/signin\" />;\r\n  }\r\n};\r\n\r\nexport default withUser(ProtectedRoute);\r\n",
    "import React from \"react\";\r\n\r\nconst Profile = (props) => {\r\n  return (\r\n    <div>\r\n      <h1>Hello User</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n",
    "import React from 'react';\n\nconst OneCardItemList = (props) => {\n    return (\n        <div className=\"cardDiv\" key={props.key}>\n        <img src={props.card.images.small} alt=\"\" height=\"400px\" width=\"350px\"/>\n        <h2>{props.card.name}</h2>\n        <div>\n        {props.children}\n        </div>\n        </div>\n    )\n}\n\nexport default OneCardItemList\n",
    "import React from 'react'\n\nconst FormField = (props) => {\n    return (\n        <div className=\"FormField\">\n            <label htmlFor={props.htmlFor}>{props.label}</label>\n            {props.children}\n        </div>\n    )\n}\n\nexport default FormField\n",
    "import React, { Component } from 'react';\nimport FormField from '../Forms/FormField';\n\nexport class SearchBar extends Component {\n    constructor(props) {\n        super(props);\n        this.handleChange = this.handleChange.bind(this);\n        this.handleClick = this.handleClick.bind(this);\n        this.handleReset = this.handleReset.bind(this);\n    }\n\n    handleChange = (e) => {\n        this.props.handleChange(e.target.value)\n    }\n\n    handleClick = () => {\n        this.props.handleClick()\n    }\n\n    handleReset = () => {\n        this.props.handleReset();\n    }\n\n\n    render() {\n        return (\n            <div className=\"SearchBar\">\n                <FormField>\n                    <input\n                    type=\"text\"\n                    value={this.props.name}\n                    onChange={this.handleChange}\n                    />\n                </FormField>\n                <div>\n                    <button onClick={this.handleClick} className=\"template-button-all-cards\">Search</button>\n                    <button onClick={this.handleReset} className=\"template-button-all-cards\">Reset search</button>\n                </div>\n                    \n            </div>\n        )\n    }\n}\n\nexport default SearchBar\n",
    "import React from 'react';\nimport \"./Loading.css\"\n\nconst Loading = () => {\n    return (\n        <div>\n            <img className=\"loading-img \"src=\"https://upload.wikimedia.org/wikipedia/commons/5/51/Pokebola-pokeball-png-0.png\" alt=\"\" />\n        </div>\n    )\n}\n\nexport default Loading\n",
    "import React, { Component } from 'react';\r\nimport '../pages/AllCards.css'\r\nimport OneCardItemList from '../components/OneCardItemList'\r\nimport apiHandler from '../api/apiHandler';\r\nimport SearchBar from '../components/SearchBar/SearchBar';\r\nimport { Link } from 'react-router-dom';\r\nimport Loading from '../components/Loading';\r\n\r\nexport class AllCards extends Component {\r\n\r\n    state = {\r\n        cards: [],\r\n        loading: false,\r\n        loadingItems : false,\r\n        page: 1,\r\n        prevY: 0,\r\n        name: \"\"\r\n    }\r\n\r\n    // pokemon API method to get all the pokemons\r\n    getAllPokemons(page){\r\n        this.setState({\r\n            loading: true, \r\n            page: 1, \r\n            prevY: 0, \r\n            cards: [],\r\n            name: \"\"\r\n        })\r\n\r\n        apiHandler.getApiByPage(page)\r\n        .then((res) => {\r\n            this.setState({cards: [...this.state.cards, ...res.data]});\r\n            this.setState({loading: false});\r\n        })\r\n        .catch(err => { console.log(err) })\r\n\r\n        var options = {\r\n            root: null,\r\n            rootMargin: \"0px\",\r\n            threshold: 1.0\r\n        }\r\n\r\n        this.observer = new IntersectionObserver(\r\n            this.handleObserver.bind(this),\r\n            options\r\n        );\r\n\r\n        this.observer.observe(this.loadingRef)\r\n    }\r\n\r\n    // pokemon API method to get all the pokemons that start with the input\r\n    getPokemonsByName = (name, page) => {\r\n        this.setState({\r\n            loading: true, \r\n            page: 1, \r\n            prevY: 0, \r\n            cards: [],\r\n        })\r\n        apiHandler.filterApiByName(name, page)\r\n        .then((res) => {\r\n            this.setState({cards: [...this.state.cards, ...res.data]});\r\n            this.setState({ loading: false})\r\n        })\r\n        .catch(error => console.log(error))\r\n    }\r\n\r\n\r\n    handleObserver(entities, observer){\r\n        const y = entities[0].boundingClientRect.y;\r\n        if (this.state.prevY > y){\r\n           \r\n            const curPage = this.state.page + 1;\r\n\r\n            if(this.state.name !== \"\") {\r\n                this.getPokemonsByName(this.state.name, curPage);\r\n            } else {\r\n                this.getAllPokemons(curPage);\r\n            }\r\n\r\n            this.setState({page: curPage});\r\n        }\r\n        this.setState({prevY: y})\r\n    }\r\n\r\n    // handle the change of input\r\n    // function is a prop to <SearchBar />\r\n    handleChange = (input) => {\r\n        this.setState({ name: input });\r\n    }\r\n\r\n    // click on \"search\" button to filter the input name\r\n    // function is a prop to <SearchBar />\r\n    handleClick = () => {\r\n        this.getPokemonsByName(this.state.name, this.state.page);\r\n    }\r\n\r\n    // click on \"reset search\" to get all the Pokemons back\r\n    // function is a prop to <SearchBar />\r\n    handleReset = () => {\r\n        this.getAllPokemons(this.state.page);\r\n    }\r\n\r\n    // add a card to my collection\r\n    addCard = async (apiId) => {\r\n        try {\r\n            await apiHandler.addCard({pokemonTCGId: apiId});\r\n        } catch (error) {console.error(error)}\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getAllPokemons(this.state.page);\r\n    }\r\n\r\n    render() {\r\n        const loadingCSS = {\r\n            height: \"100px\",\r\n            margin: \"30px\"\r\n          };\r\n\r\n        const loadingTextCSS = { display: this.state.loadingItems ? \"block\" : \"none\" };\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"search-div\">\r\n                    <h1>Search for a Pokemon ! </h1>\r\n                    <SearchBar \r\n                    name={this.state.name}\r\n                    handleChange={this.handleChange}\r\n                    handleClick={this.handleClick}\r\n                    handleReset={this.handleReset}\r\n                    />\r\n                </div>\r\n                \r\n                {this.state.loading && \r\n                <Loading />}\r\n                \r\n                <div>\r\n                    <div style={{ minHeight: \"800px\", display: \"flex\", \"flexWrap\": \"wrap\" }}>\r\n                        {this.state.cards.map(card => (\r\n                            <OneCardItemList card={card}>\r\n                                <div>\r\n                                    <Link to={\"/cards/\" + card.id} className=\"template-button-all-cards\">Card details</Link>\r\n                                    {/* <button onClick={() => {this.addCard(card.id)}} className=\"template-button-all-cards\">Add Card</button> */}\r\n                                </div>\r\n                            </OneCardItemList>\r\n\r\n                        ))}\r\n                    </div>\r\n                    \r\n                    <div\r\n                    ref={loadingRef => (this.loadingRef = loadingRef)}\r\n                    style={loadingCSS}\r\n                    >\r\n                        {this.state.cards.length > 0 && \r\n                        <Loading style={loadingTextCSS}/>}\r\n\r\n                    {/* <span style={loadingTextCSS}>Loading...</span> */}\r\n                    </div>\r\n\r\n                </div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AllCards\r\n\r\n",
    "import React, { Component } from 'react';\nimport { withUser } from '../Auth/withUser';\n\nclass OneCardActions extends Component {\n\n    handleAdd = () => {\n        this.props.getUserCardsFromModel();\n    }\n\n    render() {\n        const { userCards } = this.props.children;\n\n        return (\n            <div>\n                <div>\n                    \n                    {this.props.context.isLoggedIn && \n                    userCards.length === 0 && \n                    <button onClick={this.props.addCard} className=\"template-button-all-cards\">Add to my collection</button> } {/* user indicates that they own this card */}\n\n                    {this.props.context.isLoggedIn && \n                    userCards.length > 0 && \n                    <div>\n                        <p>You have {userCards.length} {userCards.length === 1 ? \"version\" : \"versions\"} of this card.</p>\n                        <button onClick={this.props.addCard} className=\"template-button-all-cards\">Add another to my collection</button>\n                    </div>}\n\n                    {this.props.context.isLoggedIn && \n                    userCards.map(card => {\n                        return(\n                            <div key={card._id}>\n                                \n                            </div>\n                        )\n                    })}\n\n                    {this.props.context.isLoggedIn && \n                    <h2>All the current offers : </h2>}\n                    \n                    {this.props.context.isLoggedIn && \n                    <div>See offers</div>} {/* user seeks to make a bid or exchange to get this card */}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default withUser(OneCardActions);\n\n",
    "import React, { Component } from 'react';\nimport apiHandler from '../../../api/apiHandler';\nimport { withUser } from '../../Auth/withUser';\n\nexport class OneOffer extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            currentBid: 0,\n            previousBid: this.props.offer.bid?.currentBid ||0,\n            auction: {},\n            hasHighestBid: false,\n        }\n        this.timer = null;\n        this.updateAuction = this.updateAuction.bind(this)\n    }\n\n    getCurrentAuction = async (id) => {\n        await apiHandler.findAuction(id)\n        .then((response) => { this.setState({ auction: response }) })\n        .catch(error => console.log(error))\n    }\n\n    handleChange = (event) => {\n        const key = event.target.name\n        const value = event.target.value\n        this.setState({\n            [key]: value, \n        })\n    }\n\n    updateAuction = (id) => { this.props.updateAuction(id) }\n\n    handleSubmit = async (id) => {\n        if(this.state.currentBid < this.state.previousBid) {\n            console.log(\"current bid is too low\")\n        } \n\n        // update the auction : the \"currentBid\" is now the \"highest bid\"\n        const updatedBid = {currentBid: this.state.currentBid}\n        await apiHandler.updateAuction(id, updatedBid)\n        .then((response) => { this.setState({ auction: response }) })\n        .catch(error => console.log(error))\n\n        // GET to update the auction's infos\n        // this.updateAuction();\n\n        this.displayCurrentBid();\n    }\n\n\n    finalFunction = async (id) => {\n        try {\n            await this.handleSubmit(id)\n            await this.handleBid()\n        } catch (error) {console.log(error)}\n    }\n\n    displayCurrentBid = () => {\n        if(this.props.offer.bid.buyer === this.props.context.user._id) {\n            this.setState({ hasHighestBid: true })\n        }\n    }\n\n    componentDidMount(){\n        this.getCurrentAuction(this.props.offer.bid._id)\n\n        if(this.props.context.isLoggedIn) {\n            this.displayCurrentBid()\n        }\n        \n    }\n\n    async componentDidUpdate() {\n        this.timer = setTimeout(() => {\n            this.getCurrentAuction(this.props.offer.bid._id)\n        }, 5000)\n    }\n\n    async componentWillUnmount() {\n        clearTimeout(this.timer)\n    }\n\n\n    render() {\n        return (\n            <tr key={this.state.auction._id}>\n\n            <td>\n                {this.props.offer.owner.username ? \n                (this.props.offer.owner.username) : \n                (this.props.offer.owner.email)}\n            </td>\n\n            <td>{this.props.offer.cardState}</td>\n\n            <td>\n                {this.props.offer.bid.initialPrice} $</td>\n\n            <td>{this.state.auction.currentBid ? `${this.state.auction.currentBid} $` : \"Be the first to Bid\"}</td>\n            {/* <td>{this.props.offer.bid.endDate}</td> */}\n            <td>\n                {this.state.hasHighestBid && \n                <div>\n                <p>You're in the lead !</p>\n                </div>}\n\n                {!this.state.hasHighestBid && \n                    <input \n                    type=\"number\" \n                    name=\"currentBid\" \n                    value={this.state.currentBid}                                          \n                    onChange={this.handleChange} \n                />}\n                \n            </td>\n            <td>{!this.state.hasHighestBid &&\n                <button onClick={() => this.handleSubmit(this.state.auction._id)} >\n                    Place Bid\n                    </button>}\n                </td>\n        </tr>\n        )\n    }\n}\n\nexport default withUser(OneOffer);\n\n",
    "import React, { Component } from 'react'\r\nimport \"./OffersTable.css\";\r\nimport OneOffer from './OneOffer';\r\n\r\nexport class OffersTable extends Component {\r\n    \r\n    render() {\r\n        console.log(this.props)\r\n        return (\r\n            <div>\r\n                <h3 style={{\"margin-left\": \"50px\"}}>All the auctions</h3>\r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            <td>Seller</td>\r\n                            <td>Card State</td>\r\n                            <td>Initial Price</td>\r\n                            <td>Current Bid</td>\r\n                            {/* <td>End date</td> */}\r\n                            <td>Your offer</td>\r\n                            <td>Confirm</td>\r\n                        </tr>\r\n                        \r\n                    </thead>\r\n                    <tbody>\r\n                        {this.props.auctions.map(offer => {\r\n                            return ( \r\n                            <OneOffer \r\n                            offer={offer} \r\n                            updateAuction={this.props.updateAuction}\r\n                            /> )\r\n                        })}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default OffersTable;\r\n",
    "import React, { Component } from 'react';\nimport \"./OneCard.css\"\n\nexport class CardInfo extends Component {\n\n    //Get all the infos about the card being displayed\n\n    render() {\n        return (\n            <div className=\"info-container\" >\n                <div>\n                    <h2 className=\"pokemon-name\">{this.props.pokemon.name}</h2>\n\n                    <div className=\"pokemon-type\">\n                        <h3>{this.props.pokemon.subtypes[0]} {this.props.pokemon.supertype}</h3>\n                        <p>Health : {this.props.pokemon.hp} HP</p>\n                    </div>\n                </div>\n\n                <div className=\"attacks\">\n                    <h2>Attacks : </h2>\n                    {this.props.pokemon.attacks.map(e => {\n                        return(\n                            <div>\n                                <p><b>{e.name}</b><span> {e.damage} </span></p>\n                                <p><b>Description : </b>{e.text}</p>\n                            </div>\n                        )\n\n                    })}\n\n\n                    {/* <p><b>{this.props.pokemon.attacks[0].name}</b><span> {this.props.pokemon.attacks[0].damage} Damage</span></p>\n                    <p>Description : {this.props.pokemon.attacks[0].text}</p>\n                    \n                    <p><b>{this.props.pokemon.attacks[1].name}</b><span> {this.props.pokemon.attacks[1].damage} Damage</span></p>\n                    <p>Description : {this.props.pokemon.attacks[1].text}</p> */}\n                </div>\n\n                <div className=\"pokemon-div-3\">\n\n                    <div className=\"w-r-rc\">\n                        <h2>Weaknesses : </h2>\n                        <div>\n                            \n                            { this.props.pokemon.weaknesses &&\n\n                            \n                            this.props.pokemon.weaknesses.map(e => {\n                                return ( \n                                    <div>\n                                        <p><b>{e.type} :</b> {e.value}</p>\n                                    </div>\n                                )\n                            })}\n                        </div>\n                        <div>\n                            <h2>Resistances : </h2>\n                            {this.props.pokemon.resistances && this.props.pokemon.resistances.map(e => {\n                                return (\n                                    <div>\n                                        <p> <b>{e.type} :</b> {e.value}</p>\n                                    </div>\n                                )\n                            })}\n                            \n                            {this.props.pokemon.resistances &&\n                            <p>{this.props.pokemon.resistances.type} <span>{this.props.pokemon.resistances.value}</span></p>}\n                        </div>\n                    </div>\n\n                    <div className=\"set\">\n                        <h2>Set :</h2>\n                        <div>\n                            <p><b>{this.props.pokemon.set.name}</b> – {this.props.pokemon.name}</p>\n                            <p><b>Rarity : </b>{this.props.pokemon.number}/{this.props.pokemon.set.total} {this.props.pokemon.rarity}</p>\n                        </div>\n                            <p><b>Set Symbol :</b> </p>\n                            <img src={this.props.pokemon.set.images.symbol} alt=\"symbol set\" />\n                    </div>\n                </div>\n                \n                <div><p> <b>Illustrator :</b> {this.props.pokemon.artist}</p></div>\n\n            </div>\n        )\n    }\n}\n\nexport default CardInfo\n",
    "import React from 'react';\nimport CardInfo from './CardInfo';\nimport './OneCardContainer.css'\nconst OneCardContainer = (props) => {\n    return (\n        <div className=\"container\">\n            <div>\n            <img src={props.pokemon.images.large} alt=\"card\"/>\n            </div>\n            \n            <CardInfo pokemon={props.pokemon} className=\"card-info-div\"/>\n        </div>\n    )\n}\n\nexport default OneCardContainer\n\n\n",
    "import React, { Component } from 'react';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport './SelectCardsBox.css';\n\nexport class SelectCardsBox extends Component {\n\n    handleChange = (event) => {\n        this.props.handleChange(event)\n    }\n\n    handleClick = () => {\n        this.props.handleClick()\n    }\n\n    // get all the Pokemons\n    \n    render() {\n        console.log(this.props)\n        return (\n            <div>\n                <Dropdown className=\"dropdown-cards\">\n                <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n                    Select the card(s)\n                </Dropdown.Toggle>\n\n                <Dropdown.Menu className=\"dropdown-menu\">\n                {this.props.cards.map((card, i) => {\n                    return(\n                        <div key={card._id}>\n                            <Dropdown.Item href={`#/action-${i}`} className=\"dropdown-item\">\n                                <div className=\"dropdown-cards\">\n                                <input type=\"checkbox\" id={card._id} onChange={this.props.handleChange} className=\"dropdown-checkbox\"/>\n                                <label htmlFor=\"items\">{card.pokemonTCGId.name} – {card._id}</label>\n                                </div>\n                                \n                            </Dropdown.Item>\n                        </div>\n                    )\n                })}\n                </Dropdown.Menu>\n                </Dropdown>\n                \n            </div>\n        )\n    }\n}\n\nexport default SelectCardsBox\n",
    "import React, { Component } from 'react';\nimport SelectCardsBox from './SelectCardsBox';\nimport apiHandler from '../../../api/apiHandler';\n\nexport class OneListing extends Component {\n\n    state = {\n        callBox: false,\n        loading: false,\n        cards: [],\n        exchangeItems: [],\n        loadingItems: true,\n        exchangeExists: false,\n    }\n\n    // add a card to the user's offer (before confirming)\n    addCard = (card) => {\n        let array = this.state.exchangeItems;\n        array.push(card)\n        this.setState({\n            exchangeItems : array\n        })\n    }\n\n    // delete a card from the user's offer (before confirming)\n    deleteCard = (card) => {\n        let array = [...this.state.exchangeItems];\n        let newArr = array.filter(e => e !== card);\n        this.setState({ exchangeItems : newArr })\n    }\n\n    // add or remove a card from the exchange offer\n    handleChange = (event) => {\n        if(event.target.checked) {\n            this.addCard(event.target.id)\n        } \n        else {\n            this.deleteCard(event.target.id)\n        }\n    }\n\n    handleSubmit = async () => {\n        const exchangeOffer = {\n            seller : this.props.listing.owner._id,\n            sellerItem : this.props.listing._id,\n            buyerItem : this.state.exchangeItems\n        }\n\n        // create an exchange offer\n        try {\n            await apiHandler.createExchange(exchangeOffer);\n            this.setState({\n                callBox: false,\n            });\n            this.getTheExchange(this.props.listing._id)\n        }\n        catch (error) {console.error(error)}\n    }\n\n    // get all cards that the user owns\n    getAllUserCards = async () => {\n        this.setState({ loading : true })\n\n        const cards =  await apiHandler.getAllUserCards();\n        const cardPromises = cards.map(card => {\n            return apiHandler.getOneCardFromApi(card.pokemonTCGId);\n        })\n        const responses = await Promise.all(cardPromises);\n        const populatedCards = cards.map((card,i) => {\n          return {\n              ...card,\n              pokemonTCGId: responses[i]\n          }\n        })\n\n        this.setState({\n            cards: populatedCards, \n            loadingItems: false\n        })\n    }\n\n    handleClick = () => {\n        this.setState({\n            loadingItems: true,\n            callBox: true\n        })\n        this.getAllUserCards();\n    }\n\n    getTheExchange = async (id) => {\n        await apiHandler.getExchangeBySellerItem(id)\n        .then((response) => {\n            response.length > 0 ? \n            this.setState({ exchangeExists : true }) : \n            this.setState({ exchangeExists : false })\n            \n        })\n        .catch((error) => {\n            console.log(error);\n            this.setState({ exchangeExists : false})\n        })\n    }\n\n    async componentDidMount() {\n        this.setState({\n            loading: false\n        })\n        await this.getTheExchange(this.props.listing._id);\n      \n    }\n\n    render() {\n        console.log(this.state)\n        return (\n            <tr key={this.props.listing._id}>\n                <td>{this.props.listing.owner.email}</td>\n                <td>\n                    {!this.props.listing.cardState && <p>N/D</p>}\n                    {this.props.listing.cardState && this.props.listing.cardState}\n                    </td>\n                <td>\n                    {!this.state.callBox &&\n                    <button onClick={this.handleClick} className=\"template-button-all-cards\">Place an offer</button>}\n                    \n                    <div>\n                    {this.state.callBox && this.state.loadingItems &&\n                    <div><p>Catching all your pokemons</p></div>\n                    }\n                    {this.state.callBox && \n                    \n                    <SelectCardsBox \n                        getUserCards={this.getUserCards}\n                        cards={this.state.cards}\n                        exchangeItems={this.state.exchangeItems}\n                        handleChange={this.handleChange}\n                        handleClick={this.handleClick}\n                    />} \n                    {this.state.callBox && \n                    this.state.cards.length === 0 &&\n                    !this.state.loading &&\n                    <div>You have no cards to exchange !</div>}\n                    </div>\n                </td>\n                <td>\n                    <ul>\n                        {this.state.exchangeItems.map(item => {\n                            return (\n                                <li>{item}</li>\n                            )\n                        }) }\n                    </ul>\n                </td>\n                <td>\n                    {/* {!this.state.exchangeExists &&  */}\n                        <button onClick={this.handleSubmit} className=\"template-button-all-cards\">Confirm my offer</button>\n                    {/* } */}\n                    {/* {this.state.exchangeExists &&\n                        <p>Here is your offer</p>} */}\n                    \n                    \n                </td>\n            </tr>\n        )\n    }\n}\n\nexport default OneListing;\n\n",
    "import React, { Component } from 'react';\nimport OneListing from './OneListing'\nimport \"./TableListings.css\"\nexport class TableListings extends Component {\n\n    render() {\n        return (\n            <div>\n                <h3 style={{\"margin-left\": \"50px\"}}>All listings open for exchange</h3>\n                <table>\n                <thead>\n                    <tr>\n                        <td>Owner</td>\n                        <td>Card state</td>\n                        <td>What do you wanna exchange ?</td>\n                        <td>Your current offer</td>\n                        <td>Confirm offer</td>\n                    </tr>\n                </thead>\n                <tbody>\n                    {this.props.offers.map(offer => {\n                        return (\n                            <OneListing listing={offer} pokemon={this.props.pokemon}/>\n                        )\n                    })}\n                </tbody>\n            </table>\n            </div>\n            \n        )\n    }\n}\n\nexport default TableListings\n",
    "import React, { Component } from 'react';\nimport apiHandler from '../../api/apiHandler'\nimport ActionButtons from \"./ActionButtons\"\n// import CardInfo from \"./CardInfo\"\nimport OffersTable from '../Auctions/AuctionsListings/OffersTable';\nimport \"./OneCard.css\";\nimport OneCardContainer from './OneCardContainer';\nimport TableListings from '../Exchange/TableListings/TableListings';\nimport Loading from '../Loading';\nimport { withUser } from '../Auth/withUser';\n\n\nexport class OneCard extends Component {\n    state = {\n        loading: true,\n        pokemon : null,\n        userCards : [],\n        formDisplayed: false,\n        cardsOnSale: [],\n        cardsOpenForExchange: [],\n        message: \"\"\n    }\n\n    // get all the info about this card model\n    getInfoCardFromApi = async (tcgId) => {\n        await apiHandler.getOneCardFromApi(tcgId)\n        .then((response) => { this.setState({ pokemon: response}) })\n        .catch((error) => { console.log(error) })\n    }\n\n    // get all the cards the user has in a specifique pokemon card model\n    getUserCardsFromModel = async (tcgId) => {\n        await apiHandler.getAllUserCardsFromApiCard(tcgId)\n        .then((response) => { this.setState({ userCards: response }) })\n        .catch((error) => { console.log(error) })\n    }\n\n    // get all the ongoing auctions for this model\n    getOngoingAuctions = async (tcgId) => {\n        await apiHandler.getAuctionsForTCGCard(tcgId)\n        .then((cards) => { this.setState({ cardsOnSale : cards }) })\n        .catch((error) => { console.log(error) })\n    }\n\n    // get all the cards of this model open for exchange\n    getCardsOpenForExchange = async (tcgId) => {\n        await apiHandler.getAllOpenEchangesForTCGCard(tcgId)\n        .then((response) => { this.setState({ cardsOpenForExchange: response })})\n        .catch((error) => { console.log(error) })\n    }\n\n    // add the card to the user's collection (\"My Cards\") --> indicate that the owner owns a version of it\n    addCard = async () => {\n        try {\n            await apiHandler.addCard({pokemonTCGId: this.props.match.params.id});\n            const userCards = await apiHandler.getAllUserCardsFromApiCard(this.state.pokemon.id);\n            this.setState({ userCards: userCards })\n        } catch (error) {console.error(error)}\n    }\n\n    updateAuction = (id) => {\n        this.getOngoingAuctions(id)\n    }\n\n    async componentDidMount() {\n        await this.getInfoCardFromApi(this.props.match.params.id);\n        await this.getUserCardsFromModel(this.props.match.params.id)\n        await this.getOngoingAuctions(this.props.match.params.id);\n        await this.getCardsOpenForExchange(this.props.match.params.id)\n        await this.setState({ loading : false })\n    }\n    \n    \n    render() {\n        if (this.state.loading) return <Loading />\n\n            return (\n                <div className=\"OneCard\">\n                    <OneCardContainer pokemon={this.state.pokemon}/>\n\n                    <ActionButtons \n                    addCard={this.addCard} \n                    putCardOnSale={this.putCardOnSale}\n                    showForm={this.displaySaleForm}\n                    >\n                    {this.state}\n                    </ActionButtons>\n                    \n                    <section className=\"shop-section\">\n                    <h1>How to get this card ?</h1>\n\n                    {this.state.cardsOnSale.length > 0 ?\n                        <OffersTable  \n                        auctions={this.state.cardsOnSale} \n                        updateAuction={this.updateAuction}\n                        /> :\n                        <div>There are no ongoing auctions for this model.</div>\n                    }\n\n                    {this.state.cardsOpenForExchange.length > 0 ? \n                        <TableListings offers={this.state.cardsOpenForExchange} pokemon={this.state.pokemon}/> : \n                        <div>No card is open for exchange for now.</div>\n                    }\n                    </section>\n\n                </div>\n            )\n        }\n\n    }\n\n\nexport default withUser(OneCard);\n\n",
    "import React from 'react';\nimport {Link} from 'react-router-dom';\nimport OneCardItemList from '../../OneCardItemList';\n\nconst AuctionItem = (props) => {\n    \n    return (\n        <div className=\"cardDiv\" key={props.card._id}>\n            <OneCardItemList card={props.card.pokemonTCGId} link={\"/profile/cards/\" + props.card._id}/>\n                <div>\n            <h2><b>Average price: {props.card.pokemonTCGId.cardmarket.prices.averageSellPrice}</b></h2>\n            <Link to={\"/cards/\" + props.card.pokemonTCGId.id} className=\"template-button-all-cards\">Auction Details</Link>\n            </div>\n        </div>\n    )\n}\n\nexport default AuctionItem\n",
    "import React from 'react'\n\nconst Message = (props) => {\n    return (\n        <div className=\"Message\">\n            {props.children}\n        </div>\n    )\n}\n\nexport default Message\n",
    "import React from 'react'\n\nconst Explanation = (props) => {\n    return (\n        <div>\n            {props.children}\n        </div>\n    )\n}\n\nexport default Explanation\n",
    "import React, { Component } from 'react';\r\nimport apiHandler from '../api/apiHandler';\r\nimport AuctionItem from '../components/Auctions/UserAuctions/AuctionItem';\r\nimport \"./Auctions.css\";\r\nimport Message from '../components/Message';\r\nimport Explanation from '../components/Explanation';\r\n\r\nexport class Auctions extends Component {\r\n    \r\n    state = { \r\n        cards: [],\r\n    }\r\n\r\n    async componentDidMount(){\r\n        const cards =  await apiHandler.findOpenAuctions();\r\n        \r\n        const cardPromises = cards.map(card => {\r\n            return apiHandler.getOneCardFromApi(card.pokemonTCGId);\r\n        })\r\n\r\n        const responses = await Promise.all(cardPromises);\r\n\r\n        const populatedCards = cards.map((card,i) => {\r\n          return {\r\n              ...card,\r\n              pokemonTCGId: responses[i]\r\n          }\r\n        })\r\n\r\n        this.setState({\r\n            cards: populatedCards\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        \r\n            <div>\r\n                <h1>Ongoing auctions</h1>\r\n\r\n                <Explanation>\r\n                    <p>Here are all the ongoing auctions. You can place a bid in order to acquire those cards.</p>\r\n                    <p>Each item in this list represent a model of Pokemon card. To see all the auctions for this model, click on \"Auction Details\".</p>\r\n                </Explanation>\r\n\r\n                {this.state.cards.length === 0 &&\r\n                <Message>\r\n                    <p>There are no ongoing auctions.</p>\r\n                </Message>}\r\n                <div className=\"auctions-div\">{this.state.cards.map(e => {\r\n                    return (\r\n                        <AuctionItem card={e} />\r\n                    )\r\n                })\r\n                }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Auctions\r\n",
    "import React, { Component } from 'react';\nimport apiHandler from '../../api/apiHandler';\nimport FormField from \"./FormField\"\n\nexport class SellCardForm extends Component {\n    state = {\n        user: {},\n        card : null,\n        isLoggedIn: false,\n        initialPrice: 0,\n        endDate : \"\",\n        cardState: \"\"\n    }\n\n    async componentDidMount() {\n        try {\n            await apiHandler\n            .isLoggedIn()\n            .then((data) => {\n                this.setState({ user: data, isLoggedIn: true});\n            })\n            .catch((error) => {\n                this.setState({ user: null, isLoggedIn: false});\n            });\n\n            const cardInfo = await apiHandler.getOneUserCard(this.props.card._id);\n            this.setState({ card: cardInfo});\n            \n            // const userCards = await apiHandler.getAllUserCardsFromApiCard(this.state.pokemon.id);\n            // this.setState({ userCards: userCards })\n        }\n        catch (error) {console.error(error)}\n    }\n\n    handleChange = (event) => {\n        this.setState({\n            [event.target.name] : event.target.value\n        })\n    }\n\n    closeForm = () => {\n        this.props.closeForm();\n    }\n    \n    createBid = async (event) => {\n        event.preventDefault();\n\n        // create a bid (auction)\n        const bid = {\n            item: this.props.card._id,\n            initialPrice: this.state.initialPrice,\n            startDate: Date.now(),\n            endDate: this.state.endDate,\n            status: \"ongoing\"\n        }\n        const bidCreated = await apiHandler.createAuction(bid)\n        console.log(bidCreated)\n        \n        // update the onSale status of the card\n        await apiHandler.updateCard(this.props.card._id, {\n            onSale: true, \n            price: this.state.initialPrice,\n            bid: bidCreated._id,\n            cardState: this.state.cardState\n        })\n\n        // close the form\n        this.closeForm();\n    }\n    \n    render() {\n        \n        if(this.state.pokemon === null) return (<div>Loading...</div>)\n        else {\n            return (\n                <div className=\"OneCard\">\n                    <div className=\"container\">\n                            <div>\n                                <h2>SaleForm</h2>\n\n                                <FormField label=\"Select the state of the card you're selling\" htmlFor=\"cardState\"> \n                                    <select name=\"cardState\" onChange={this.handleChange}>\n                                        <option disabled>Select</option>\n                                        <option value=\"Mint\">Mint</option>\n                                        <option value=\"Near Mint\">Near Mint</option>\n                                        <option value=\"Bad\">Bad</option>\n                                    </select>\n                                </FormField>\n                                <p><b>Initial Price :</b> {this.props.card.pokemonTCGId.cardmarket.prices.averageSellPrice}</p>\n                                <FormField label=\"Choose a price\" htmlFor=\"initialPrice\">\n                                    <input \n                                    type='number'\n                                    onChange={this.handleChange}\n                                    value={this.state.initialPrice}\n                                    name='initialPrice'\n                                    />\n                                </FormField>\n\n                                {/* <FormField label=\"end of the bid\" htmlFor=\"endDate\">\n                                    <input \n                                    type=\"datetime-local\"\n                                    onChange={this.handleChange}\n                                    value={this.state.endTime}\n                                    name=\"endDate\"\n                                    />\n                                </FormField> */}\n\n                             <button onClick={this.createBid} className=\"template-button-all-cards\">Sell</button>\n                            </div>\n                    </div>\n                </div>\n            )\n        }\n\n    }\n}\n\nexport default SellCardForm\n",
    "import React, { Component } from 'react'\nimport apiHandler from '../../api/apiHandler'\n\nexport class BtnExchangeStatus extends Component {\n    state = {\n        openForExchange : this.props.card.openForExchange\n    }\n\n    handleClick = async () => {\n        try {\n            await apiHandler.updateCard(this.props.card._id, {\n                openForExchange: !this.props.card.openForExchange\n            })\n            this.props.update();\n        }\n        catch (error) {\n            console.error(error);\n        }\n    }\n\n    render() {\n        return (\n            <div>\n\n                {!this.props.card.openForExchange && \n                <div>\n                    <p>Not open for exchanges</p>\n                    <button onClick={this.handleClick} className='template-button-all-cards'>Accept exchanges</button>\n                </div>}\n\n                {this.props.card.openForExchange && \n                <div>\n                    <p>Open for exchanges</p>\n                    <button onClick={this.handleClick}  className='template-button-all-cards'>Refuse exchange</button>\n                </div>}\n                \n                {/* <input type=\"checkbox\" name=\"openForExchange\" defaultChecked={this.state.openForExchange} onClick={this.handleChange}/> */}\n            </div>\n        )\n    }\n}\n\nexport default BtnExchangeStatus\n",
    "import React, { Component } from 'react';\nimport apiHandler from '../../api/apiHandler';\nimport FormSale from '../Forms/FormSale';\nimport OneCardItemList from '../OneCardItemList';\nimport BtnExchangeStatus from './BtnExchangeStatus';\nimport Loading from '../Loading';\nimport {Link} from \"react-router-dom\"\nimport \"./UserCards.css\"\n\nexport class CardsList extends Component {\n    state = {\n        cards: null,\n        searchName : \"\",\n        callForm: false\n    }\n\n    async componentDidMount() {\n        this.getAllCards()\n        .then((response) => {\n            this.setState({\n                cards: response\n            })\n        })\n        .catch(error => console.error(error))  \n    }\n\n    getAllCards = async () => {\n        try {\n            const cards = await apiHandler.getAllUserCards(); //get all the user's card (one element per card, not per tcg model)\n            const cardPromises = cards.map(card => {\n                return apiHandler.getOneCardFromApi(card.pokemonTCGId);\n            })\n            const responses = await Promise.all(cardPromises);\n            const populatedCards = cards.map((card, i) => {\n                return {\n                    ...card,\n                    pokemonTCGId: responses[i]\n                }\n            });\n            return populatedCards \n        }\n        catch (error) {console.error(error)}\n    }\n\n    updateStatus = () => {\n        this.getAllCards()\n    }\n\n    callForm = () => {\n        this.setState({ callForm : true })\n    }\n\n    closeForm = () => {\n        this.setState({ callForm : false })\n    }\n\n    render() {\n        if(this.state.cards === null) return <Loading />\n\n        return (\n            <div className=\"CardsList\">\n                <h2>ALL USER'S CARDS</h2>\n                {this.state.cards.map(card => {\n                    return (\n                        <div key={card._id}>\n                        <OneCardItemList card={card.pokemonTCGId} link={\"/profile/cards/\" + card._id}>\n                            <button onClick={this.callForm} className=\"template-button-all-cards\">Sell</button>\n                        \n                        <BtnExchangeStatus card={card} update={this.updateStatus}/>\n                        </OneCardItemList>\n\n                    {this.state.callForm && <FormSale card={card} closeForm={this.closeForm}/>}\n                    \n                    </div>)\n                })}\n                \n            </div>\n        )\n    }\n}\n\nexport default CardsList\n",
    "import React, { Component } from 'react';\r\nimport apiHandler from '../../../api/apiHandler';\r\nimport OneCardItemList from '../../OneCardItemList'\r\n\r\nexport class UserAuctionItem extends Component {\r\n    \r\n    // accept the highest bid for an auction\r\n    handleAccept = async () => {\r\n\r\n        // update the owner of the card\r\n        const card = this.props.auction.item\r\n        const updatedCard = {\r\n            owner: this.props.auction.buyer,\r\n            onSale: false,\r\n            price: null,\r\n        }\r\n        await apiHandler.updateCard(card._id, updatedCard)\r\n\r\n        // delete \"bid\" (auction)\r\n        await apiHandler.deleteAuction(this.props.auction._id)\r\n        console.log(\"bid finished\")\r\n    }\r\n\r\n    // cancel the auction ==> delete \"bid\" (auction)\r\n    handleDelete = async () => {\r\n        await apiHandler.deleteAuction(this.props.auction._id)\r\n        console.log(\"bid deleted\")\r\n    }\r\n    \r\n    render() {\r\n        console.log(this.props)\r\n        return (\r\n            <div key={this.props.auction._id}> \r\n                <OneCardItemList card={this.props.auction.pokemonTCGId}/>\r\n                <div>Current Offer : {this.props.auction.currentBid}</div>\r\n                <button onClick={this.handleAccept} className=\"template-button-all-cards\">Accept the offer</button>\r\n                <button onClick={this.handleDelete} className=\"template-button-all-cards\">Remove card from sale</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UserAuctionItem\r\n",
    "import React, { Component } from 'react';\r\nimport apiHandler from '../../../api/apiHandler';\r\nimport UserAuctionItem from './UserAuctionItem';\r\nimport Message from '../../Message';\r\n\r\nexport class UserAuctions extends Component {\r\n    state = {\r\n        auctions: []\r\n    }\r\n    \r\n    async componentDidMount(){\r\n        const myAuctions = await apiHandler.findUserAuctions()\r\n        const promises = myAuctions.map(auction => {\r\n            return ( \r\n                apiHandler.getOneCardFromApi(auction.item.pokemonTCGId)\r\n            )\r\n        })\r\n        const responses = await Promise.all(promises)\r\n        const populatedBids = myAuctions.map((auction, i) => {\r\n            return ( \r\n                {...auction, pokemonTCGId:responses[i]}\r\n            )\r\n        })\r\n        this.setState({\r\n            auctions: populatedBids,\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            \r\n            <div>\r\n                <h1>Your auctions</h1>\r\n                <p>Here are all the bids you received for your ongoing auctions.</p>\r\n                \r\n                {/* If the user hasn't receive any bid for his auctions yet.*/}\r\n                {this.state.auctions.length === 0 && \r\n                <Message>\r\n                    <p>You don't have any bids from your open auctions right now.</p>\r\n                </Message>}\r\n\r\n                <div>\r\n                    {this.state.auctions.map(e => {\r\n                        return (                           \r\n                            <UserAuctionItem auction={e} />\r\n                        )                      \r\n                    })}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UserAuctions\r\n",
    "import React, { Component } from 'react';\nimport apiHandler from '../../api/apiHandler';\nimport OneCardItemList from '../OneCardItemList';\nimport { Link } from \"react-router-dom\"\nimport './OpenForExchange.css';\nimport Message from '../Message';\nimport Explanation from '../Explanation';\n\n\nexport class OpenForExchange extends Component {\n    state = {\n        cards: null\n    }\n\n    async componentDidMount() {\n        const cards = await apiHandler.getAllOpenEchanges()\n\n        const cardPromises = cards.map(card => {\n            return apiHandler.getOneCardFromApi(card.pokemonTCGId);\n        })\n\n        const responses = await Promise.all(cardPromises);\n\n        const populatedCards = cards.map((card,i) => {\n          return {\n              ...card,\n              pokemonTCGId: responses[i]\n          }\n        })\n\n        this.setState({\n            cards: populatedCards\n        })\n        \n    }\n\n    render() {\n        console.log(this.state.cards)\n        if(this.state.cards === null) return (<div>Loading...</div>)\n\n        return (\n            <div>\n                <h2>Cards open for exchanges</h2>\n                <Explanation>\n                    <p>Here are all the cards available for an exchange.</p>\n                </Explanation>\n\n                <div className=\"exchange-div\">\n\n                    {this.state.cards.length === 0 &&\n                    <Message>There are no cards available for an exchange right now.</Message>}\n\n                    {this.state.cards.map(card => {\n                        return (\n                            <OneCardItemList card={card.pokemonTCGId} key={card._id}>\n                                <Link to={\"/cards/\" + card.pokemonTCGId.id} className=\"template-button-all-cards\">Card details</Link>\n                            </OneCardItemList>\n                        )\n                    })}\n                </div>\n                \n            </div>\n        )\n    }\n}\n\nexport default OpenForExchange\n",
    "import React, { Component } from 'react';\nimport apiHandler from '../../api/apiHandler';\nimport Loading from '../Loading';\n\nexport class ExchangeOfferBox extends Component {\n    state = {\n        loading: true,\n        items: null\n    }\n\n    async componentDidMount() {\n        try {\n            const promises = this.props.items.map(item => {\n                return (\n                    apiHandler.getOneCardFromApi(item.pokemonTCGId)\n                )\n            })\n\n            const responses = await Promise.all(promises)\n\n            const populatedItems = this.props.items.map((item, i) => {\n                return (\n                    {...item, pokemonTCGId: responses[i]}\n                )\n            })\n\n            this.setState({\n                items: populatedItems, \n                loading: false\n            })\n        }\n        catch (error) { console.error(error)}\n    }\n\n\n    render() {\n        if(this.state.loading === true) return <Loading></Loading>\n        return (\n            <div>\n                <ul>\n                    {this.state.items.map(item => {\n                        return (\n                            <li key={item._id + 3}>\n                                <div> \n                                    <img src={item.pokemonTCGId.images.small} alt={\"photo \" + item.pokemonTCGId.name}/>\n                                <p>{item.pokemonTCGId.name}</p>\n                                <p>Average sell price : {item.pokemonTCGId.cardmarket.prices.averageSellPrice}</p>\n                                </div>\n                            </li>\n                            \n                        )\n                    })}\n                </ul>\n            </div>\n        )\n    }\n}\n\nexport default ExchangeOfferBox\n",
    "import React from 'react';\nimport OneCardItemList from '../OneCardItemList';\nimport ExchangeOfferBox from './ExchangeOfferBox';\nimport apiHandler from '../../api/apiHandler';\n\nclass UserCardExchangeItem extends React.Component {\n\n    handleAccept = (exchange) => {\n        this.props.handleAccept(exchange);\n    }\n\n    handleDecline = (exchange) => {\n        this.props.handleDecline(exchange)\n    }\n\n    render () {\n        // console.log(this.props.exchange)\n        return (\n            <div key={this.props.exchange.sellerItem._id +1}>\n                <OneCardItemList \n                card={this.props.exchange.pokemonTCGId}\n                />\n                <div>\n                    <p>Initial price of my card : {this.props.exchange.pokemonTCGId.cardmarket.prices.averageSellPrice}</p>\n                </div>\n                <ExchangeOfferBox items={this.props.exchange.buyerItem}/>\n                <div>\n                    <button onClick={() => {this.handleAccept(this.props.exchange)}} className=\"template-button-all-cards\">Accept Offer</button>\n                    <button onClick={() => {this.handleDecline(this.props.exchange)}} className=\"template-button-all-cards\">Decline Offer</button>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default UserCardExchangeItem\n",
    "import React, { Component } from 'react';\nimport Loading from '../Loading';\nimport apiHandler from '../../api/apiHandler';\nimport Message from '../Message';\nimport UserCardExchangeItem from './UserCardExchangeItem';\nimport Explanation from '../Explanation';\n\nexport class UserExchanges extends Component {\n\n    state = {\n        exchanges: null,\n        loading: true\n    }\n\n    getAllExchangeOffers = async () => {\n        try {\n            const myExchanges = await apiHandler.getExchangeOffersReceived();\n            const promises = myExchanges.map(exchange => {\n                return ( \n                    apiHandler.getOneCardFromApi(exchange.sellerItem.pokemonTCGId)\n                )\n            })\n            const responses = await Promise.all(promises)\n            const populatedCards = myExchanges.map((exchange, i) => {\n                return ( \n                    {...exchange, pokemonTCGId:responses[i]}\n                )\n            })\n\n            this.setState({\n                exchanges: populatedCards,\n            })\n        }\n        catch (error) { console.error(error)}\n    }\n\n    // when user accepts an echange, the items exchanged swap owners & exchange gets deleted\n    handleAccept = async (exchange) => {\n        try {\n            // update seller items with id buyer & reset to unavailable for exchanges\n            const updatedSellerItem = {\n                owner: exchange.buyer,\n                openForExchange: false\n            }\n            const newCard = await apiHandler.updateCard(exchange.sellerItem._id, updatedSellerItem);\n            console.log(newCard)\n\n            // update buyer items with id seller & reset to unavailable for exchanges\n            const updatedBuyerItem = {\n                owner: exchange.seller,\n                openForExchange: false\n            }\n            const promises = exchange.buyerItem.map(item => {\n                return (\n                    apiHandler.updateCard(item._id, updatedBuyerItem)\n                )\n            })\n            await Promise.all(promises)\n            \n            //delete exchange\n            await apiHandler.deleteExchange(exchange._id)\n\n        }\n        catch (error) { console.error(error)};\n        \n        this.handleClick();\n    }\n\n    //when a user declines an offer ==> deletes the exchange.\n    handleDecline = async (exchange) => {\n        await apiHandler.deleteExchange(exchange._id);\n        this.handleClick();\n    }\n\n    // calls the API again to update the exchange offers\n    handleClick = () => {\n        this.getAllExchangeOffers();\n    }\n\n    async componentDidMount() {\n        this.getAllExchangeOffers();\n        \n        this.setState({\n            loading: false\n        })\n    }\n\n    render() {\n        if(this.state.exchanges === null) return <Loading />\n        \n        return (\n            <div>\n                <h2>Offers for exchange</h2>\n                    <Explanation>\n                        <p>Here are all the offers of exchange you have received.</p>\n                    </Explanation>\n                \n                {this.state.exchanges.length === 0 && \n                <Message>You don't have offers for exchanges yet...</Message>}\n        \n\n                {!this.state.loading &&\n                    <div>\n                    {this.state.exchanges.map(exchange => {\n                        return (\n                            <UserCardExchangeItem \n                            exchange={exchange} \n                            handleDecline={this.handleDecline}\n                            handleAccept={this.handleAccept}\n                            />\n                        )\n                    })}\n                </div>}\n            \n            </div>\n        )\n    }\n}\n\nexport default UserExchanges",
    "import React from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport NavMain from \"./components/NavMain\";\r\nimport Home from \"./pages/Home\";\r\nimport Signin from \"./pages/Signin\";\r\nimport Signup from \"./pages/Signup\";\r\nimport ProtectedRoute from \"./components/ProtectedRoute\";\r\nimport Profile from \"./pages/Profile\";\r\nimport AllCards from \"./pages/AllCards\";\r\nimport OneCard from \"./components/OneCard/OneCard\"\r\nimport Auctions from \"./pages/Auctions\";\r\nimport CardsList from \"./components/UserCards/UserCardsList\";\r\nimport FormSale from \"./components/Forms/FormSale\";\r\nimport UserAuctions from \"./components/Auctions/UserAuctions/UserAuctions\"\r\nimport OpenForExchanges from \"./components/Exchange/CardsOpenForExchange\"\r\nimport UserExchanges from \"./components/Exchange/UserExchangesList\";\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header>\r\n      <NavMain />\r\n      </header>\r\n      <body>\r\n      <Switch>\r\n        {/* <Route path=\"/test\" component={TestApi} /> */}\r\n        <Route exact path=\"/\" component={Home} />\r\n        <Route exact path=\"/signin\" component= {Signin} />\r\n        <Route exact path=\"/signup\" component= {Signup} />\r\n        <Route exact path=\"/cards\" component= {AllCards} />\r\n        <Route exact path=\"/cards/:id\" component ={OneCard} />\r\n        <Route exact path=\"/auctions\" component= {Auctions} />\r\n        <Route exact path=\"/exchanges\" component={OpenForExchanges} />\r\n        <ProtectedRoute exact path=\"/profile\" component= {Profile} />\r\n        <ProtectedRoute path=\"/profile/cards\" component={CardsList} />\r\n        <ProtectedRoute exact path=\"/profile/cards/:id\" component={FormSale} />\r\n        <ProtectedRoute path=\"/profile/auctions\" component={UserAuctions} />\r\n        <ProtectedRoute path=\"/profile/exchanges\" component={UserExchanges} />\r\n      </Switch>\r\n      </body>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n",
    "import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport UserProvider from \"./components/Auth/UserProvider\";\r\nimport App from \"./App\";\r\n\r\nimport \"./styles/reset.css\";\r\nimport \"./styles/global.css\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <UserProvider>\r\n      <App />\r\n    </UserProvider>\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n"
  ],
  "sourceRoot": ""
}
